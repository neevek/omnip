name: Rust

on:
  push:
    tags:
      - 'release/*'

jobs:
  linux-gnu-x86_64:
    name: Linux gnu x86_64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - run: rustup update && cargo build --all-features --release && mv target/release/omnip target/release/omnip-linux-gnu-x86_64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/omnip-linux-gnu-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-musl-x86_64:
    name: Linux musl x86_64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - run: sudo apt-get -y install musl-tools && rustup target add x86_64-unknown-linux-musl && rustup update
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - run: cross build --all-features --release --target x86_64-unknown-linux-musl
      - run: mv target/x86_64-unknown-linux-musl/release/omnip target/x86_64-unknown-linux-musl/release/omnip-linux-musl-x86_64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/x86_64-unknown-linux-musl/release/omnip-linux-musl-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-x86_64:
    name: Windows msvc x86_64
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      - run: cargo build --all-features --release && mv target/release/omnip.exe target/release/omnip-windows-x86_64.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/omnip-windows-x86_64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-arm64:
    name: Windows msvc ARM64
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-pc-windows-msvc
          override: true
      - run: cargo build --target aarch64-pc-windows-msvc --all-features --release && mv target/aarch64-pc-windows-msvc/release/omnip.exe target/release/omnip-windows-arm64.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/omnip-windows-arm64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  darwin-x86_64:
    name: Darwin x86_64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - run: rustup target add x86_64-apple-darwin && cargo build --all-features --release --target x86_64-apple-darwin && mv target/x86_64-apple-darwin/release/omnip target/x86_64-apple-darwin/release/omnip-darwin-x86_64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/x86_64-apple-darwin/release/omnip-darwin-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
  darwin-aarch64:
    name: Darwin Aarch64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          override: true
      - run: rustup target add aarch64-apple-darwin && cargo build --all-features --release --target aarch64-apple-darwin && mv target/aarch64-apple-darwin/release/omnip target/aarch64-apple-darwin/release/omnip-darwin-aarch64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/aarch64-apple-darwin/release/omnip-darwin-aarch64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-gnueabihf-armv7:
    name: Linux gnueabihf ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - run: rustup target add armv7-unknown-linux-gnueabihf && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target armv7-unknown-linux-gnueabihf && mv target/armv7-unknown-linux-gnueabihf/release/omnip target/armv7-unknown-linux-gnueabihf/release/omnip-linux-gnueabihf-armv7
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/armv7-unknown-linux-gnueabihf/release/omnip-linux-gnueabihf-armv7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-musleabihf-armv7:
    name: Linux musleabihf ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-musleabihf
          override: true
      - run: rustup target add armv7-unknown-linux-musleabihf && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target armv7-unknown-linux-musleabihf && mv target/armv7-unknown-linux-musleabihf/release/omnip target/armv7-unknown-linux-musleabihf/release/omnip-linux-musleabihf-armv7
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/armv7-unknown-linux-musleabihf/release/omnip-linux-musleabihf-armv7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-musleabi-armv7:
    name: Linux musleabi ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-musleabi
          override: true
      - run: rustup target add armv7-unknown-linux-musleabi && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target armv7-unknown-linux-musleabi && mv target/armv7-unknown-linux-musleabi/release/omnip target/armv7-unknown-linux-musleabi/release/omnip-linux-musleabi-armv7
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/armv7-unknown-linux-musleabi/release/omnip-linux-musleabi-armv7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-gnueabi-armv7:
    name: Linux gnueabi ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabi
          override: true
      - run: rustup target add armv7-unknown-linux-gnueabi && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target armv7-unknown-linux-gnueabi && mv target/armv7-unknown-linux-gnueabi/release/omnip target/armv7-unknown-linux-gnueabi/release/omnip-linux-gnueabi-armv7
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/armv7-unknown-linux-gnueabi/release/omnip-linux-gnueabi-armv7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  linux-musleabi-armv5:
    name: Linux musleabi ARMv5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: arm-unknown-linux-musleabi
          override: true
      - run: rustup target add arm-unknown-linux-musleabi && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target arm-unknown-linux-musleabi && mv target/arm-unknown-linux-musleabi/release/omnip target/arm-unknown-linux-musleabi/release/omnip-linux-musleabi-armv5
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/arm-unknown-linux-musleabi/release/omnip-linux-musleabi-armv5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  linux-gnu-aarch64:
    name: Linux gnu Aarch64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - run: rustup target add aarch64-unknown-linux-gnu && rustup update && cargo install cross --git https://github.com/cross-rs/cross && cross build --all-features --release --target aarch64-unknown-linux-gnu && mv target/aarch64-unknown-linux-gnu/release/omnip target/aarch64-unknown-linux-gnu/release/omnip-linux-gnu-aarch64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/aarch64-unknown-linux-gnu/release/omnip-linux-gnu-aarch64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-musl-aarch64:
    name: Linux musl Aarch64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl
          override: true
      - run: sudo apt-get -y install musl-tools && rustup target add aarch64-unknown-linux-musl && rustup update
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - run: cross build --all-features --release --target aarch64-unknown-linux-musl
      - run: mv target/aarch64-unknown-linux-musl/release/omnip target/aarch64-unknown-linux-musl/release/omnip-linux-musl-aarch64
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/aarch64-unknown-linux-musl/release/omnip-linux-musl-aarch64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
